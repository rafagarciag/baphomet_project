<%= @message %>

<script language="Javascript" type="text/javascript" src="../../assets/javascripts/edit_area/edit_area_full.js"></script>
<script type="text/javascript">
   
	// initialisation
	editAreaLoader.init({
		id: "example_1"	// id of the textarea to transform		
		,start_highlight: true	// if start with highlight
		,allow_resize: "false"
		,allow_toggle: true
		,word_wrap: true
		,language: "en"
		,syntax: "java"	
	});

	// callback functions
	function my_save(id, content){
		//alert("Here is the content of the EditArea '"+ id +"' as received by the save callback function:\n"+content);
	}
		
	function my_load(id){
		editAreaLoader.setValue(id, "The content is loaded from the load_callback function into EditArea");
	}
		
	function test_setSelectionRange(id){
		editAreaLoader.setSelectionRange(id, 100, 150);
	}
		
	function test_getSelectionRange(id){
		var sel =editAreaLoader.getSelectionRange(id);
		//alert("start: "+sel["start"]+"\nend: "+sel["end"]); 
	}
		
	function test_setSelectedText(id){
		text= "[REPLACED SELECTION]"; 
		editAreaLoader.setSelectedText(id, text);
	}
		
	function test_getSelectedText(id){
		//alert(editAreaLoader.getSelectedText(id)); 
	}
	
	function editAreaLoaded(id){
		if(id=="example_2")
		{
			open_file1();
			open_file2();
		}
	}
	
	function open_file1()
	{
		var new_file= {id: "to\\ é # € to", text: "$authors= array();\n$news= array();", syntax: 'php', title: 'beautiful title'};
		editAreaLoader.openFile('example_2', new_file);
	}
	
	function open_file2()
	{
		var new_file= {id: "Filename", text: "<a href=\"toto\">\n\tbouh\n</a>\n<!-- it's a comment -->", syntax: 'html'};
		editAreaLoader.openFile('example_2', new_file);
	}
	
	function close_file1()
	{
		editAreaLoader.closeFile('example_2', "to\\ é # € to");
	}
	
	function toogle_editable(id)
	{
		editAreaLoader.execCommand(id, 'set_editable', !editAreaLoader.execCommand(id, 'is_editable'));
	}

	//OLD CODE
   var lineObjOffsetTop = 2;
   
   function createTextAreaWithLines(id)
   {
      var el = document.createElement('DIV');
      var ta = document.getElementById(id);
      ta.parentNode.insertBefore(el,ta);
      el.appendChild(ta);
      
      el.className='textAreaWithLines';
      el.style.width = (ta.offsetWidth + 30) + 'px';
      ta.style.position = 'absolute';
      ta.style.left = '40px';
      el.style.height = (ta.offsetHeight + 2) + 'px';
      el.style.overflow='hidden';
      el.style.position = 'relative';
      el.style.width = (ta.offsetWidth + 40) + 'px';
      var lineObj = document.createElement('DIV');
      lineObj.style.position = 'absolute';
      lineObj.style.top = lineObjOffsetTop + 'px';
      lineObj.style.left = '0px';
      lineObj.style.width = '27px';
      el.insertBefore(lineObj,ta);
      lineObj.style.textAlign = 'right';
      lineObj.className='lineObj';
      var string = '';
      for(var no=1;no<10002;no++){
         if(string.length>0)string = string + '<br>';
         string = string + no;
      }
      
      ta.onkeydown = function() { positionLineObj(lineObj,ta); };
      ta.onmousedown = function() { positionLineObj(lineObj,ta); };
      ta.onscroll = function() { positionLineObj(lineObj,ta); };
      ta.onblur = function() { positionLineObj(lineObj,ta); };
      ta.onfocus = function() { positionLineObj(lineObj,ta); };
      ta.onmouseover = function() { positionLineObj(lineObj,ta); };
      lineObj.innerHTML = string;
      
   }
   
   function positionLineObj(obj,ta)
   {
      obj.style.top = (ta.scrollTop * -1 + lineObjOffsetTop) + 'px';   
   
      
   }
   
</script>

<br />
<% if @pastebin.errors.any? %>
	<h2><%= pluralize(@pastebin.errors.count, "error") %> prohibited this item from being saved:</h2>
	<ul>
	<% @pastebin.errors.full_messages.each do |msg| %>
		<li><%= msg %></li>
	<% end %>
	</ul>

<% end %>

<%= form_for @pastebin, :as => :pastebin, :url => { :controller => 'pastebin', :action => 'update', :id => @pastebin.id }, :method => :post do |p| %>
	<div class="toolbar" >
		<b>Language:</b>
		<br />
		<select>
			<option value="plain">Plain text</option>
			<option value="c">C</option>
			<option value="java">Java</option>
			<option value="ruby">Ruby</option>
			<option value="scheme">Scheme</option>
		</select>
		<br />
		<br />
		<b>Color scheme:</b>
		<br />
		<select>
			<option value="clasic">Classic cl2p</option>
			<option value="blue">Intense blue</option>
			<option value="red">Furious red</option>
			<option value="psychedelic">Psychedelic</option>
			<option value="bnw">b&w</option>
		</select>
		<br />
		<br />
		<b>Font size:</b>
		<br />
		<select>
			<option value="normal">Normal</option>
			<option value="big">Big</option>
			<option value="bigger">Bigger</option>
			<option value="enormous">Enormous</option>
		</select>
		<br />
		<br />
		<%= p.check_box :visible %> <%= p.label :visible, "Visible to others" %>
		<br />
		<br />
		<%= p.check_box :editable %> <%= p.label :editable, "Editable by others" %>
		<br />
		<br />
		<br />
		<%= p.submit %>
	</div>
	<%= p.text_area :content, { :id => "example_1", :wrap => "off" }%> 
	<script type="text/javascript">
		createTextAreaWithLines('codeTextarea');
	</script>
	
<% end %>
